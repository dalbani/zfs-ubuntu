Index: zfs-linux-0.8.4/lib/libspl/include/sys/isa_defs.h
===================================================================
--- zfs-linux-0.8.4.orig/lib/libspl/include/sys/isa_defs.h
+++ zfs-linux-0.8.4/lib/libspl/include/sys/isa_defs.h
@@ -192,10 +192,19 @@ extern "C" {
 
 #define	_SUNOS_VTOC_16
 
+#elif defined(__riscv)
+
+#define	_LITTLE_ENDIAN
+#define	_SUNOS_VTOC_16
+
+#ifndef _LP64
+#define	_ILP32
+#endif
+
 #else
 /*
  * Currently supported:
- * x86_64, i386, arm, powerpc, s390, sparc, and mips
+ * x86_64, i386, arm, powerpc, s390, sparc, and mips, riscv64
  */
 #error "Unsupported ISA type"
 #endif
Index: zfs-linux-0.8.4/lib/libefi/rdwr_efi.c
===================================================================
--- zfs-linux-0.8.4.orig/lib/libefi/rdwr_efi.c
+++ zfs-linux-0.8.4/lib/libefi/rdwr_efi.c
@@ -156,7 +156,7 @@ struct dk_map2  default_vtoc_map[NDKMAP]
 
 #if defined(i386) || defined(__amd64) || defined(__arm) || \
     defined(__powerpc) || defined(__sparc) || defined(__s390__) || \
-    defined(__mips__)
+    defined(__mips__) || defined(__riscv)
 	{	V_BOOT,		V_UNMNT	},		/* i - 8 */
 	{	V_ALTSCTR,	0	},		/* j - 9 */
 
Index: zfs-linux-0.8.4/include/spl/sys/isa_defs.h
===================================================================
--- zfs-linux-0.8.4.orig/include/spl/sys/isa_defs.h
+++ zfs-linux-0.8.4/include/spl/sys/isa_defs.h
@@ -192,10 +192,24 @@
  */
 #define	_ALIGNMENT_REQUIRED	1
 
+#elif defined(__riscv)
+
+#define	_LITTLE_ENDIAN
+#define	_SUNOS_VTOC_16
+
+#ifndef _LP64
+#define	_ILP32
+#endif
+
+/*
+ * Illumos doesn't define _ALIGNMENT_REQUIRED for RISC-V, so default to 1
+ * out of paranoia.
+ */
+
 #else
 /*
  * Currently supported:
- * x86_64, i386, arm, powerpc, s390, sparc, and mips
+ * x86_64, i386, arm, powerpc, s390, sparc, mips and risc-v
  */
 #error "Unsupported ISA type"
 #endif
Index: zfs-linux-0.8.4/module/lua/ldo.c
===================================================================
--- zfs-linux-0.8.4.orig/module/lua/ldo.c
+++ zfs-linux-0.8.4/module/lua/ldo.c
@@ -62,6 +62,8 @@
 #define JMP_BUF_CNT	12
 #elif defined(__s390x__)
 #define JMP_BUF_CNT	18
+#elif defined(__riscv)
+#define JMP_BUF_CNT	16
 #else
 #define	JMP_BUF_CNT	1
 #endif
Index: zfs-linux-0.8.4/module/lua/setjmp/setjmp.S
===================================================================
--- zfs-linux-0.8.4.orig/module/lua/setjmp/setjmp.S
+++ zfs-linux-0.8.4/module/lua/setjmp/setjmp.S
@@ -14,4 +14,6 @@
 #include "setjmp_mips.S"
 #elif defined(__s390x__)
 #include "setjmp_s390x.S"
+#elif defined(__riscv)
+#include "setjmp_riscv64.S"
 #endif
Index: zfs-linux-0.8.4/module/lua/setjmp/setjmp_riscv64.S
===================================================================
--- /dev/null
+++ zfs-linux-0.8.4/module/lua/setjmp/setjmp_riscv64.S
@@ -0,0 +1,71 @@
+/*
+ * Copyright (C) 2020 Canonical, Ltd.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sublicense, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+ * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
+ * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+ * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+ * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ */
+        .option pic
+        .text
+        .globl  setjmp
+        .type   setjmp, @function
+
+setjmp:
+	sd s0, (0)(a0)
+	sd s1, (8)(a0)
+	sd s2, (16)(a0)
+	sd s3, (24)(a0)
+	sd s4, (32)(a0)
+	sd s5, (40)(a0)
+	sd s6, (48)(a0)
+	sd s7, (56)(a0)
+	sd s8, (64)(a0)
+	sd s9, (72)(a0)
+	sd s10, (80)(a0)
+	sd s11, (88)(a0)
+	sd ra, (96)(a0)
+	sd sp, (104)(a0)
+	li  a0, 0
+	ret
+
+        .globl  longjmp
+        .type   longjmp, @function
+longjmp:
+	ld s0, (0)(a0)
+	ld s1, (8)(a0)
+	ld s2, (16)(a0)
+	ld s3, (24)(a0)
+	ld s4, (32)(a0)
+	ld s5, (40)(a0)
+	ld s6, (48)(a0)
+	ld s7, (56)(a0)
+	ld s8, (64)(a0)
+	ld s9, (72)(a0)
+	ld s10, (80)(a0)
+	ld s11, (88)(a0)
+	ld ra, (96)(a0)
+	ld sp, (104)(a0)
+
+	beq a1, zero, longjmp_1
+	mv a0, a1
+	ret
+
+longjmp_1:
+	li a0, 1
+	ret
