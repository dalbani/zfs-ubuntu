Index: zfs-linux-0.8.3/cmd/ztest/ztest.c
===================================================================
--- zfs-linux-0.8.3.orig/cmd/ztest/ztest.c
+++ zfs-linux-0.8.3/cmd/ztest/ztest.c
@@ -2182,8 +2182,8 @@ ztest_get_done(zgd_t *zgd, int error)
 }
 
 static int
-ztest_get_data(void *arg, lr_write_t *lr, char *buf, struct lwb *lwb,
-    zio_t *zio)
+ztest_get_data(void *arg, uint64_t arg2, lr_write_t *lr, char *buf,
+    struct lwb *lwb, zio_t *zio)
 {
 	ztest_ds_t *zd = arg;
 	objset_t *os = zd->zd_os;
Index: zfs-linux-0.8.3/include/sys/zil.h
===================================================================
--- zfs-linux-0.8.3.orig/include/sys/zil.h
+++ zfs-linux-0.8.3/include/sys/zil.h
@@ -399,6 +399,7 @@ typedef struct itx {
 	void		*itx_callback_data; /* User data for the callback */
 	size_t		itx_size;	/* allocated itx structure size */
 	uint64_t	itx_oid;	/* object id */
+	uint64_t	itx_gen;	/* gen number for zfs_get_data */
 	lr_t		itx_lr;		/* common part of log record */
 	/* followed by type-specific part of lr_xx_t and its immediate data */
 } itx_t;
@@ -467,7 +468,7 @@ typedef int zil_parse_blk_func_t(zilog_t
 typedef int zil_parse_lr_func_t(zilog_t *zilog, lr_t *lr, void *arg,
     uint64_t txg);
 typedef int zil_replay_func_t(void *arg1, void *arg2, boolean_t byteswap);
-typedef int zil_get_data_t(void *arg, lr_write_t *lr, char *dbuf,
+typedef int zil_get_data_t(void *arg, uint64_t arg2, lr_write_t *lr, char *dbuf,
     struct lwb *lwb, zio_t *zio);
 
 extern int zil_parse(zilog_t *zilog, zil_parse_blk_func_t *parse_blk_func,
Index: zfs-linux-0.8.3/module/zfs/zfs_log.c
===================================================================
--- zfs-linux-0.8.3.orig/module/zfs/zfs_log.c
+++ zfs-linux-0.8.3/module/zfs/zfs_log.c
@@ -515,6 +515,7 @@ zfs_log_write(zilog_t *zilog, dmu_tx_t *
 	uint32_t blocksize = zp->z_blksz;
 	itx_wr_state_t write_state;
 	uintptr_t fsync_cnt;
+	uint64_t gen = 0;
 
 	if (zil_replaying(zilog, tx) || zp->z_unlinked ||
 	    zfs_xattr_owner_unlinked(zp)) {
@@ -537,6 +538,9 @@ zfs_log_write(zilog_t *zilog, dmu_tx_t *
 		(void) tsd_set(zfs_fsyncer_key, (void *)(fsync_cnt - 1));
 	}
 
+	(void) sa_lookup(zp->z_sa_hdl, SA_ZPL_GEN(ZTOZSB(zp)), &gen,
+	    sizeof (gen));
+
 	while (resid) {
 		itx_t *itx;
 		lr_write_t *lr;
@@ -577,6 +581,7 @@ zfs_log_write(zilog_t *zilog, dmu_tx_t *
 		BP_ZERO(&lr->lr_blkptr);
 
 		itx->itx_private = ZTOZSB(zp);
+		itx->itx_gen = gen;
 
 		if (!(ioflag & (FSYNC | FDSYNC)) && (zp->z_sync_cnt == 0) &&
 		    (fsync_cnt == 0))
Index: zfs-linux-0.8.3/module/zfs/zil.c
===================================================================
--- zfs-linux-0.8.3.orig/module/zfs/zil.c
+++ zfs-linux-0.8.3/module/zfs/zil.c
@@ -1740,7 +1740,8 @@ cont:
 			 * completed after "lwb_write_zio" completed.
 			 */
 			error = zilog->zl_get_data(itx->itx_private,
-			    lrwb, dbuf, lwb, lwb->lwb_write_zio);
+			    itx->itx_gen, lrwb, dbuf, lwb,
+			    lwb->lwb_write_zio);
 
 			if (error == EIO) {
 				txg_wait_synced(zilog->zl_dmu_pool, txg);
Index: zfs-linux-0.8.3/module/zfs/zvol.c
===================================================================
--- zfs-linux-0.8.3.orig/module/zfs/zvol.c
+++ zfs-linux-0.8.3/module/zfs/zvol.c
@@ -953,7 +953,8 @@ zvol_get_done(zgd_t *zgd, int error)
  * Get data to generate a TX_WRITE intent log record.
  */
 static int
-zvol_get_data(void *arg, lr_write_t *lr, char *buf, struct lwb *lwb, zio_t *zio)
+zvol_get_data(void *arg, uint64_t arg2, lr_write_t *lr, char *buf,
+    struct lwb *lwb, zio_t *zio)
 {
 	zvol_state_t *zv = arg;
 	uint64_t offset = lr->lr_offset;
Index: zfs-linux-0.8.3/module/zfs/zfs_vnops.c
===================================================================
--- zfs-linux-0.8.3.orig/module/zfs/zfs_vnops.c
+++ zfs-linux-0.8.3/module/zfs/zfs_vnops.c
@@ -1038,7 +1038,8 @@ static int zil_fault_io = 0;
  * Get data to generate a TX_WRITE intent log record.
  */
 int
-zfs_get_data(void *arg, lr_write_t *lr, char *buf, struct lwb *lwb, zio_t *zio)
+zfs_get_data(void *arg, uint64_t gen, lr_write_t *lr, char *buf,
+    struct lwb *lwb, zio_t *zio)
 {
 	zfsvfs_t *zfsvfs = arg;
 	objset_t *os = zfsvfs->z_os;
@@ -1049,6 +1050,7 @@ zfs_get_data(void *arg, lr_write_t *lr,
 	dmu_buf_t *db;
 	zgd_t *zgd;
 	int error = 0;
+	uint64_t zp_gen;
 
 	ASSERT3P(lwb, !=, NULL);
 	ASSERT3P(zio, !=, NULL);
@@ -1067,6 +1069,17 @@ zfs_get_data(void *arg, lr_write_t *lr,
 		zfs_iput_async(ZTOI(zp));
 		return (SET_ERROR(ENOENT));
 	}
+
+        /* check if generation number matches */
+	if (sa_lookup(zp->z_sa_hdl, SA_ZPL_GEN(zfsvfs), &zp_gen,
+	    sizeof (zp_gen)) != 0) {
+		zfs_iput_async(ZTOI(zp));
+		return (SET_ERROR(EIO));
+	}
+	if (zp_gen != gen) {
+		zfs_iput_async(ZTOI(zp));
+		return (SET_ERROR(ENOENT));
+	}
 
 	zgd = kmem_zalloc(sizeof (zgd_t), KM_SLEEP);
 	zgd->zgd_lwb = lwb;
