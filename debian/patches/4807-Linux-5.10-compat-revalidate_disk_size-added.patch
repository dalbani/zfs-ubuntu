From 59b687232798a4da0e7647cca19a308aa82b5fad Mon Sep 17 00:00:00 2001
From: Coleman Kane <ckane@colemankane.org>
Date: Sun, 18 Oct 2020 13:06:18 -0400
Subject: [PATCH 4807/4807] Linux 5.10 compat: revalidate_disk_size() added
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

A new function was added named revalidate_disk_size() and the old
revalidate_disk() appears to have been deprecated. As the only ZFS
code that calls this function is zvol_update_volsize, swapping the
old function call out for the new one should be all that is required.

Reviewed-by: Brian Behlendorf <behlendorf1@llnl.gov>
Signed-off-by: Coleman Kane <ckane@colemankane.org>
Closes #11085
---
 config/kernel-revalidate-disk-size.m4 | 24 ++++++++++++++++++++++++
 config/kernel.m4                      |  2 ++
 module/os/linux/zfs/zvol_os.c         |  4 ++++
 3 files changed, 30 insertions(+)
 create mode 100644 config/kernel-revalidate-disk-size.m4

Index: zfs-linux-0.8.4/config/kernel-revalidate-disk-size.m4
===================================================================
--- /dev/null
+++ zfs-linux-0.8.4/config/kernel-revalidate-disk-size.m4
@@ -0,0 +1,24 @@
+dnl #
+dnl # 5.10 API change
+dnl # revalidate_disk() was replaced by revalidate_disk_size()
+dnl #
+AC_DEFUN([ZFS_AC_KERNEL_SRC_REVALIDATE_DISK_SIZE], [
+	ZFS_LINUX_TEST_SRC([revalidate_disk_size], [
+		#include <linux/genhd.h>
+	], [
+		struct gendisk *disk = NULL;
+		(void) revalidate_disk_size(disk, false);
+	])
+])
+
+AC_DEFUN([ZFS_AC_KERNEL_REVALIDATE_DISK_SIZE], [
+	AC_MSG_CHECKING([whether revalidate_disk_size() is available])
+	ZFS_LINUX_TEST_RESULT_SYMBOL([revalidate_disk_size],
+		[revalidate_disk_size], [block/genhd.c], [
+		AC_MSG_RESULT(yes)
+		AC_DEFINE(HAVE_REVALIDATE_DISK_SIZE, 1,
+			[revalidate_disk_size() is available])
+	], [
+		AC_MSG_RESULT(no)
+	])
+])
Index: zfs-linux-0.8.4/config/kernel.m4
===================================================================
--- zfs-linux-0.8.4.orig/config/kernel.m4
+++ zfs-linux-0.8.4/config/kernel.m4
@@ -83,6 +83,7 @@ AC_DEFUN([ZFS_AC_KERNEL_TEST_SRC], [
 	ZFS_AC_KERNEL_SRC_BLK_QUEUE_PLUG
 	ZFS_AC_KERNEL_SRC_BLKG_TRYGET
 	ZFS_AC_KERNEL_SRC_GET_DISK_AND_MODULE
+	ZFS_AC_KERNEL_SRC_REVALIDATE_DISK_SIZE
 	ZFS_AC_KERNEL_SRC_GET_DISK_RO
 	ZFS_AC_KERNEL_SRC_GENERIC_READLINK_GLOBAL
 	ZFS_AC_KERNEL_SRC_DISCARD_GRANULARITY
@@ -146,6 +147,7 @@ AC_DEFUN([ZFS_AC_KERNEL_TEST_SRC], [
 	ZFS_AC_KERNEL_SRC_KSTRTOUL
 	ZFS_AC_KERNEL_SRC_PERCPU
 	ZFS_AC_KERNEL_SRC_BLKDEV_CHECK_DISK_CHANGE
+	ZFS_AC_KERNEL_SRC_BLKDEV_BDEV_CHECK_MEDIA_CHANGE
 
 	AC_MSG_CHECKING([for available kernel interfaces])
 	ZFS_LINUX_TEST_COMPILE_ALL([kabi])
@@ -204,6 +206,7 @@ AC_DEFUN([ZFS_AC_KERNEL_TEST_RESULT], [
 	ZFS_AC_KERNEL_BLK_QUEUE_MAX_SEGMENTS
 	ZFS_AC_KERNEL_BLK_QUEUE_PLUG
 	ZFS_AC_KERNEL_GET_DISK_AND_MODULE
+	ZFS_AC_KERNEL_REVALIDATE_DISK_SIZE
 	ZFS_AC_KERNEL_GET_DISK_RO
 	ZFS_AC_KERNEL_GENERIC_READLINK_GLOBAL
 	ZFS_AC_KERNEL_DISCARD_GRANULARITY
@@ -267,6 +270,7 @@ AC_DEFUN([ZFS_AC_KERNEL_TEST_RESULT], [
 	ZFS_AC_KERNEL_KSTRTOUL
 	ZFS_AC_KERNEL_PERCPU
 	ZFS_AC_KERNEL_BLKDEV_CHECK_DISK_CHANGE
+	ZFS_AC_KERNEL_BLKDEV_BDEV_CHECK_MEDIA_CHANGE
 ])
 
 dnl #
Index: zfs-linux-0.8.4/module/zfs/zvol.c
===================================================================
--- zfs-linux-0.8.4.orig/module/zfs/zvol.c
+++ zfs-linux-0.8.4/module/zfs/zvol.c
@@ -467,7 +467,11 @@ out:
 		mutex_exit(&zv->zv_state_lock);
 
 	if (disk != NULL)
+#ifdef HAVE_REVALIDATE_DISK_SIZE
+		revalidate_disk_size(disk, false);
+#else
 		revalidate_disk(disk);
+#endif
 
 	return (SET_ERROR(error));
 }
