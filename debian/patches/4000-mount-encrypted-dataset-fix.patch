Description: Improved mounting of encrypted dataset
 Make unloading the key more robust.
 The unit was failing instead of stopping if someone manually unloaded
 the key before stopping the unit (zfs unload-key is failing on an
 unavailable key).
 Follow a similar logic than for loading the key, checking for the key
 status before unloading it.
 .
 BindsTo dataset keyload unit to mount associate unit.
 We need a stronger dependency between the mount unit and its keyload unit
 when we know that the dataset is encrypted.
 If the keyload unit fails, Wants= will still try to mount the dataset,
 which will then fail.
 It’s better to show that the failure is due to a dependency failing, the
 keyload unit, by tighting up the dependency. We can do this as we know
 that we generate both units in the generator and so, it’s not an
 optional dependency.
 BindsTo enable as well that if the keyload unit fails at any point, the
 associated mountpoint will be then unmounted.
 .
 Ensure mount unit pilots when its ZFS key is loaded.
 Drop Before=zfs.mount dependency explicitly on generated key-load .service
 unit.
 Indeed, the associated mount unit is After=<dataset-key-load>.service.
 This is thus the mount point which controls at what point it wants to be
 mounted (Before=zfs-mount.service in stock generator), but this can be
 an automount point, or triggered by another service.
 This additional dependency from the key load service is not needed thus.
Author: Jean-Baptiste Lallement <jean.baptiste@ubuntu.com>
Author: Didier Roche <didrocks@ubuntu.com>
Forwarded: https://github.com/openzfs/zfs/pull/10477
Last-Update: 2020-06-19
Index: zfs-linux-0.8.4/etc/systemd/system-generators/zfs-mount-generator.in
===================================================================
--- a/etc/systemd/system-generators/zfs-mount-generator.in
+++ b/etc/systemd/system-generators/zfs-mount-generator.in
@@ -115,6 +115,7 @@ process_line() {
   wants="zfs-import.target"
   requires=""
   requiredmounts=""
+  bindsto=""
   wantedby=""
   requiredby=""
   noauto="off"
@@ -172,6 +173,12 @@ set -eu;\
 keystatus=\"\$\$(@sbindir@/zfs get -H -o value keystatus \"${dataset}\")\";\
 [ \"\$\$keystatus\" = \"unavailable\" ] || exit 0;\
 ${keyloadscript}'"
+      keyunloadcmd="\
+/bin/sh -c '\
+set -eu;\
+keystatus=\"\$\$(@sbindir@/zfs get -H -o value keystatus \"${dataset}\")\";\
+[ \"\$\$keystatus\" = \"available\" ] || exit 0;\
+@sbindir@/zfs unload-key \"${dataset}\"'"
 
 
 
@@ -191,7 +198,6 @@ Documentation=man:zfs-mount-generator(8)
 DefaultDependencies=no
 Wants=${wants}
 After=${after}
-Before=${before}
 ${requires}
 ${keymountdep}
 
@@ -199,11 +205,12 @@ ${keymountdep}
 Type=oneshot
 RemainAfterExit=yes
 ExecStart=${keyloadcmd}
-ExecStop=@sbindir@/zfs unload-key '${dataset}'"   > "${dest_norm}/${keyloadunit}"
+ExecStop=${keyunloadcmd}"   > "${dest_norm}/${keyloadunit}"
     fi
     # Update the dependencies for the mount file to want the
     # key-loading unit.
-    wants="${wants} ${keyloadunit}"
+    wants="${wants}"
+    bindsto="BindsTo=${keyloadunit}"
     after="${after} ${keyloadunit}"
   fi
 
@@ -414,6 +421,7 @@ Documentation=man:zfs-mount-generator(8)
 Before=${before}
 After=${after}
 Wants=${wants}
+${bindsto}
 ${requires}
 ${requiredmounts}
 
